name: SonarQube Scan + Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download SonarScanner CLI
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Run SonarScanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=github.actions.project \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: sonar
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create app package
        run: |
          tar -czf python-demo.tar.gz *.py requirements.txt
          ls -lh python-demo.tar.gz

      - name: Copy package to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "python-demo.tar.gz"
          target: "/tmp/python-demo/"

      - name: Deploy & Start Python App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            mkdir -p /tmp/python-demo
            cd /tmp/python-demo
            tar -xzf python-demo.tar.gz
            ls -l

            # Install Python 3.11 and pip
            sudo yum -y update || echo "âš  Skipped yum update"
            sudo amazon-linux-extras enable python3.11
            sudo yum install -y python3.11 python3.11-pip
            python3.11 -m pip install --upgrade pip

            # Install dependencies
            python3.11 -m pip install --user -r requirements.txt

            # Kill previous app if running
            pkill -f flask || echo "No previous process"

            # Start app
            nohup python3.11 *.py > app.log 2>&1 &
            echo "App started. Processes:"
            ps aux | grep *.py | grep -v grep
