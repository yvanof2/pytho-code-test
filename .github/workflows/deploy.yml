name: Sonar Scan + Deploy to EC2

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  sonar-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ----------------------------
      # Checkout code
      # ----------------------------
      - name: Checkout code
        uses: actions/checkout@v3

      # ----------------------------
      # Set up Python
      # ----------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # ----------------------------
      # SonarQube Scan
      # ----------------------------
      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Run SonarScanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=sast_scan_test \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # ----------------------------
      # Prepare EC2 target directory
      # ----------------------------
      - name: Prepare EC2 directory
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            mkdir -p /tmp/python-demo
            chmod 755 /tmp/python-demo

      # ----------------------------
      # Archive project on runner
      # ----------------------------
      - name: Archive project
        run: |
          TAR_PATH="$GITHUB_WORKSPACE/python-demo.tar.gz"
          tar -zcf "$TAR_PATH" .
          echo "Tarball created at $TAR_PATH"
          ls -lh "$TAR_PATH"
          if [ ! -f "$TAR_PATH" ]; then
            echo "❌ Tarball not found! Failing workflow."
            exit 1
          fi

      # ----------------------------
      # Upload tarball to EC2
      # ----------------------------
      - name: Upload tarball to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: ${{ github.workspace }}/python-demo.tar.gz
          target: /tmp/python-demo/
          overwrite: true
          debug: true

      # ----------------------------
      # Deploy app on EC2
      # ----------------------------
      - name: Deploy app on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            cd /tmp/python-demo
            echo "Extracting tarball..."
            tar -xzf python-demo.tar.gz
            echo "Installed files:"
            ls -l
            echo "Installing Python dependencies..."
            sudo yum update -y
            sudo yum install -y python3 python3-pip
            pip3 install -r requirements.txt
            echo "Starting app in background..."
            nohup python3 app.py > app.log 2>&1 &
            echo "App started. Checking process..."
            ps aux | grep app.py | grep -v grep
